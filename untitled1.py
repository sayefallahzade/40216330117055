# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yulMmDALOD1AlZMikG7BnfASIKEInsue
"""

class ChessBoard:
    def __init__(self, n):
        self.n = n

    def is_safe(self, board, row, col):
        for i in range(col):
            if board[i] == row or \
               board[i] - i == row - col or \
               board[i] + i == row + col:
                return False
        return True

    def solve_n_queens(self):
        def solve(board, col):
            if col == self.n:
                return 1
            count = 0
            for row in range(self.n):
                if self.is_safe(board, row, col):
                    board[col] = row
                    count += solve(board, col + 1)
            return count

        board = [-1] * self.n
        return solve(board, 0)


def count_ways_to_place_eight_queens():
    chess_board = ChessBoard(8)
    total_ways = chess_board.solve_n_queens()
    return total_ways


if __name__ == "__main__":
    total_ways = count_ways_to_place_eight_queens()
    print("Total ways to place 8 queens on a chessboard: ", total_ways)